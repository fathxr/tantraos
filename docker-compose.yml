version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: tantraos-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./server/database/migrations:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - tantraos-network
    command: --default-authentication-plugin=mysql_native_password

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: tantraos-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tantraos-network
    command: redis-server --appendonly yes

  # TantraOS Application
  app:
    build: .
    container_name: tantraos-app
    restart: unless-stopped
    ports:
      - "80:3001"
      - "443:3001"
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - PORT=3001
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    depends_on:
      - mysql
      - redis
    networks:
      - tantraos-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: tantraos-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - tantraos-network

volumes:
  mysql_data:
  redis_data:

networks:
  tantraos-network:
    driver: bridge